{"ast":null,"code":"var _jsxFileName = \"/Users/elizabetasulentic/my-app/my-app2/src/App.js\";\nimport React, { Component } from \"react\";\nimport UserInput from \"./components/UserInput\";\nimport Messages from \"./Messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // Function to handle message submission\n    this.handleSendMessage = message => {\n      // Add the new message to your messages state\n      this.setState(prevState => ({\n        messages: [...prevState.messages, message]\n      }));\n    };\n    this.state = {\n      messages: [] // You should have a state to store messages in your App component\n    };\n\n    this.drone = new window.Scaledrone(\"UeDuN68LJIbS29SF\", {\n      // channelID koji je generirao Scaledrone bi se trebao nalazi unutar .env da se izbjegne hardcodiranje i ostvari privatnost\n\n      data: this.state.chatmember\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(UserInput, {\n        onSendMessage: this.handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessageList\",\n        children: this.state.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Messages, {\n        messages: this.state.messages,\n        currentMember: this.state.currentMember\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","UserInput","Messages","jsxDEV","_jsxDEV","App","constructor","props","handleSendMessage","message","setState","prevState","messages","state","drone","window","Scaledrone","data","chatmember","render","className","children","onSendMessage","fileName","_jsxFileName","lineNumber","columnNumber","map","index","currentMember"],"sources":["/Users/elizabetasulentic/my-app/my-app2/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport UserInput from \"./components/UserInput\";\nimport Messages from \"./Messages\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [], // You should have a state to store messages in your App component\n    };\n \n    this.drone = new window.Scaledrone(\"UeDuN68LJIbS29SF\", {\n      // channelID koji je generirao Scaledrone bi se trebao nalazi unutar .env da se izbjegne hardcodiranje i ostvari privatnost\n\n      data: this.state.chatmember,\n    });\n \n  }\n\n  // Function to handle message submission\n  handleSendMessage = (message) => {\n    // Add the new message to your messages state\n    this.setState((prevState) => ({\n      messages: [...prevState.messages, message],\n    }));\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* Render the UserInput component and pass handleSendMessage as a prop */}\n        <UserInput onSendMessage={this.handleSendMessage} />\n        {/* Render your messages here */}\n        <div className=\"MessageList\">\n          {this.state.messages.map((message, index) => (\n            <div key={index}>{message}</div>\n          ))}\n        </div>\n      </div>\n    );\n\n    return (\n      <div className=\"App\">\n        {/* Ostali elementi va≈°e aplikacije */}\n        <Messages messages={this.state.messages} currentMember={this.state.currentMember} />\n      </div>\n    );\n\n    \n  }\n\n\n\n\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,GAAG,SAASL,SAAS,CAAC;EAC1BM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAad;IAAA,KACAC,iBAAiB,GAAIC,OAAO,IAAK;MAC/B;MACA,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;QAC5BC,QAAQ,EAAE,CAAC,GAAGD,SAAS,CAACC,QAAQ,EAAEH,OAAO;MAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAlBC,IAAI,CAACI,KAAK,GAAG;MACXD,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;;IAED,IAAI,CAACE,KAAK,GAAG,IAAIC,MAAM,CAACC,UAAU,CAAC,kBAAkB,EAAE;MACrD;;MAEAC,IAAI,EAAE,IAAI,CAACJ,KAAK,CAACK;IACnB,CAAC,CAAC;EAEJ;EAYAC,MAAMA,CAAA,EAAG;IACP,oBACEf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAElBjB,OAAA,CAACH,SAAS;QAACqB,aAAa,EAAE,IAAI,CAACd;MAAkB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEpDtB,OAAA;QAAKgB,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzB,IAAI,CAACR,KAAK,CAACD,QAAQ,CAACe,GAAG,CAAC,CAAClB,OAAO,EAAEmB,KAAK,kBACtCxB,OAAA;UAAAiB,QAAA,EAAkBZ;QAAO,GAAfmB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;IAGR,oBACEtB,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAElBjB,OAAA,CAACF,QAAQ;QAACU,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACD,QAAS;QAACiB,aAAa,EAAE,IAAI,CAAChB,KAAK,CAACgB;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC;EAIV;AAKF;AAEA,eAAerB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}